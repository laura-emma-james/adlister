DROP DATABASE IF EXISTS ads_db;
CREATE DATABASE IF NOT EXISTS ads_db;

USE ads_db;

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS ads;
DROP TABLE IF EXISTS ads_category;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS ads_questions;
DROP TABLE IF EXISTS ads_answers;

-- SHOW TABLE ;

CREATE TABLE users (
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
first_name VARCHAR(255) NOT NULL,
last_name VARCHAR(255) NOT NULL,
email VARCHAR(255) NOT NULL,
username VARCHAR(255) NOT NULL,
password VARCHAR(255) NOT NULL,
profile_image VARCHAR(255),
bio LONGTEXT,
PRIMARY KEY(id)
);

CREATE TABLE ads(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INT UNSIGNED NOT NULL,
title VARCHAR(255) NOT NULL,
description VARCHAR(255) NOT NULL,
price VARCHAR(30) NOT NULL,
ad_image VARCHAR(255),
PRIMARY KEY(id),
FOREIGN KEY(user_id) REFERENCES users(id)
  ON DELETE CASCADE
);

CREATE TABLE categories(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
name VARCHAR(255),
PRIMARY KEY (id)
);

CREATE TABLE ads_category(
ads_id INT UNSIGNED NOT NULL,
cat_id INT UNSIGNED NOT NULL,
FOREIGN KEY (ads_id) REFERENCES ads(id),
FOREIGN KEY(cat_id) REFERENCES categories(id)
);


CREATE TABLE ads_questions(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
questions LONGTEXT,
ad_id INT UNSIGNED NOT NULL,
user_id INT UNSIGNED NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(user_id) REFERENCES users(id),
FOREIGN KEY(ad_id) REFERENCES ads(id)
);

CREATE TABLE ads_answers(
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
answers LONGTEXT,
questions_id INT UNSIGNED NOT NULL,
user_id INT UNSIGNED NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(questions_id) REFERENCES ads_questions(id)
);

SELECT * FROM users;